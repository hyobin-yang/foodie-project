plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'UMC'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
	//implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	//annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'


	//runtimeOnly 'com.mysql:mysql-connector-j'
	//runtimeOnly 'com.mysql:mysql-connector-java:8.0.33'

	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	implementation 'org.hibernate:hibernate-core:5.6.9.Final'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'


//
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'

}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/resources']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


// Querydsl 설정부
def generated = 'src/main/generated'


clean {
	delete file(generated)
}

querydsl {
	jpa = true
	querydslSourcesDir = generated
}
sourceSets {
	main.java.srcDir generated
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
